-- 事务 
-- 操作被事务管理，要么同时成功，要么同时失败
CREATE TABLE account (
	id INT PRIMARY KEY AUTO_INCREMENT,
	NAME VARCHAR(10),
	balance DOUBLE
);

INSERT INTO account (NAME, balance) VALUES ('zhangsan', 1000), ('lisi', 1000);

SELECT * FROM account;

-- transaction zhangsan-500, lisi+500
UPDATE account SET balance = balance-500 WHERE NAME = 'zhangsan';
UPDATE account SET balance = balance+500 WHERE NAME = 'lisi';
SELECT * FROM account; -- zhangsan 500, lisi 1500

UPDATE account SET balance = 1000;

-- 开启事务
START TRANSACTION;
UPDATE account SET balance = balance-500 WHERE NAME = 'zhangsan'; -- temp change to 500, but reopen it will be 1000
乱码
UPDATE account SET balance = balance+500 WHERE NAME = 'lisi'; 

-- 回滚事务
ROLLBACK; -- before transaction starts

-- 提交事务(手动提交)
START TRANSACTION;
UPDATE account SET balance = balance-500 WHERE NAME = 'zhangsan'; 
UPDATE account SET balance = balance+500 WHERE NAME = 'lisi'; 
COMMIT; -- 提交

-- 事务自动提交 one DML one TRANSACTION
SELECT @@autocommit; -- 1自动提交

SET @@autocommit = 0; -- DML 不会自动生效
UPDATE account SET balance = balance - 500 WHERE NAME = 'zhangsan';
COMMIT;

-- 事务的四大特征：
-- 1. 原子性：是不可分割的最小操作单位，要么同时成功，要么同时失败。
-- 2. 持久性：当事务提交或回滚后，数据库会持久化的保存数据。
-- 3. 隔离性：多个事务之间。相互独立。
-- 4. 一致性：事务操作前后，数据总量不变

事务的隔离级别
* 概念：多个事务之间隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就可以解决这些问题。
* 存在问题：
	1. 脏读：一个事务，读取到另一个事务中没有提交的数据
	2. 不可重复读(虚读)：在同一个事务中，两次读取到的数据不一样。
	3. 幻读：一个事务操作(DML)数据表中所有记录，另一个事务添加了一条数据，则第一个事务查询不到自己的修改。
* 隔离级别：
	1. read uncommitted：读未提交
		* 产生的问题：脏读、不可重复读、幻读
	2. read committed：读已提交 （Oracle）
		* 产生的问题：不可重复读、幻读
	3. repeatable read：可重复读 （MySQL default）
		* 产生的问题：幻读
	4. serializable：串行化
		* 可以解决所有的问题

* 数据库查询隔离级别：
		* SELECT @@tx_isolation; -- REPEATABLE-READ (MySQL)
	* 数据库设置隔离级别：
		* SET GLOBAL TRANSACTION ISOLATION LEVEL READ 级别字符串;

SET GLOBAL TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

-- DCL 管理用户
USE mysql;
SELECT * FROM USER;
CREATE USER 'cass'@'localhost' IDENTIFIED BY '123'; -- CREATE USER '用户名'@'主机名' IDENTIFIED BY '密码';
CREATE USER 'cass'@'%' IDENTIFIED BY '123'; -- 任意主机登录

UPDATE USER SET PASSWORD = PASSWORD('345') WHERE USER = 'cass'; -- 修改密码并加密
SET PASSWORD FOR 'cass'@'localhost' = PASSWORD('123');

DROP USER 'cass'@'localhost';

-- 忘记密码
cmd >
net stop mysql
skip-grant-tables
use mysql;
update user set password = password('你的新密码') where user = 'root';

-- 权限管理
SHOW GRANTS FOR 'root'@'localhost'; 

-- 授予权限
GRANT ALL ON *.* TO 'zhangsan'@'localhost'; -- grant 权限列表 on 数据库名.表名 to '用户名'@'主机名';
GRANT DELETE,UPDATE ON db3.account TO 'zhangsan'@'localhost';

-- 撤销权限
REVOKE UPDATE ON db3.`account` FROM 'lisi'@'%'; -- revoke 权限列表 on 数据库名.表名 from '用户名'@'主机名';
