Tomcat web服务器软件
http://localhost:8080/Tomcat_01_war_exploded
http://localhost:8080/Tomcat_01_war_exploded/hello.html

application context : /
http://localhost:8080 //默认就是根目录了

Servlet：  server applet
* 概念：运行在服务器端的小程序
* Servlet就是一个接口，定义了Java类被浏览器访问到(tomcat识别)的规则。

1. 创建JavaEE项目
2. 定义一个类，实现Servlet接口
	* public class ServletDemo1 implements Servlet
3. 实现接口中的抽象方法
4. 配置Servlet

实现JAVA CLASS到URL的映射
web.xml
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!-- 配置Servlet -->
    <servlet>
        <servlet-name>serve01</servlet-name>
        <servlet-class>web.servlet.Servelet_01</servlet-class>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>serve01</servlet-name>
        <url-pattern>/serve01</url-pattern>
    </servlet-mapping>
</web-app>

* 执行原理：
	1. 当服务器接受到客户端浏览器的请求后，会解析请求URL路径，获取访问的Servlet的资源路径
	2. 查找web.xml文件，是否有对应的<url-pattern>标签体内容。
	3. 如果有，则在找到对应的<servlet-class>全类名
	4. tomcat会将字节码文件加载进内存，并且创建其对象
	5. 调用其方法
	
* Servlet中的生命周期方法：
	1. 被创建：执行init方法，只执行一次
		* Servlet什么时候被创建？
			* 默认情况下，第一次被访问时，Servlet被创建
			* 可以配置执行Servlet的创建时机。
				* 在<servlet>标签下配置
					1. 第一次被访问时，创建
						* <load-on-startup>的值为负数
					2. 在服务器启动时，创建
						* <load-on-startup>的值为0或正整数


		* Servlet的init方法，只执行一次，说明一个Servlet在内存中只存在一个对象，Servlet是单例的
			* 多个用户同时访问时，可能存在线程安全问题。
			* 解决：尽量不要在Servlet中定义成员变量。即使定义了成员变量，也不要对修改值

	2. 提供服务：执行service方法，执行多次
		* 每次访问Servlet时，Service方法都会被调用一次。
	3. 被销毁：执行destroy方法，只执行一次
		* Servlet被销毁时执行。服务器关闭时，Servlet被销毁
		* 只有服务器正常关闭时，才会执行destroy方法。
		* destroy方法在Servlet被销毁之前执行，一般用于释放资源
		
Servlet v3.1之后配置不需要XML

@WebServlet("/servlet02")
public class Servelet_02 implements Servlet {
    @Override
    public void init(ServletConfig servletConfig) throws ServletException {

    }

    @Override
    public ServletConfig getServletConfig() {
        return null;
    }

    @Override
    public void service(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException {
        System.out.println("servlet 3.1!");
    }

    @Override
    public String getServletInfo() {
        return null;
    }

    @Override
    public void destroy() {

    }
}

Using CATALINA_BASE:   "C:\Users\10492\.IntelliJIdea2019.3\system\tomcat\Tomcat_9_0_33_Tomcat_01_2"
